@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using ProduktCyfrowy
@inject RoomContext dbContext
@inject ISnackbar Snackbar

<MudPaper>
    <MudDialog>
        <TitleContent>
            <MudText Typo="Typo.h6">Dodawanie sal</MudText>
        </TitleContent>
        <DialogContent>
            <MudFileUpload T="IBrowserFile" FilesChanged="AddManyRooms" MaximumFileCount="1">
                <ButtonTemplate>
                    <MudButton HtmlTag="label" Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.CloudUpload" for="@context.Id">
                        Dodaj wiele sal plikiem .csv
                    </MudButton>
                </ButtonTemplate>
            </MudFileUpload>
            <MudTextField T="string" @bind-Value="@building" Label="Budynek*" Variant="Variant.Outlined" />
            <MudTextField T="string" @bind-Value="@roomName" Label="Nazwa sali*" Variant="Variant.Outlined" />
            <MudSelect T="User" Label="Nadzorujący" Variant="Variant.Outlined" @ref="mudUserField">

               @foreach (var item in dbContext.Users)
                {
                    <MudSelectItem Value="@(item)">@(item.FirstName + " " + item.LastName)</MudSelectItem>
                }

           </MudSelect>
            <MudTextField T="int" @bind-Value="@seatsNumber" Label="Dostępne miejsca*" Variant="Variant.Outlined" />
            <MudCheckBox @bind-Value="@computersAvailable" Label="Dostępne komputery" />
        </DialogContent>
        <DialogActions>
            <MudText Typo="Typo.body2">*wymagane pola</MudText>
            <MudButton OnClick="AddSingleRoom" Color="Color.Primary" Variant="Variant.Filled">Dodaj</MudButton>
        </DialogActions>
    </MudDialog>
</MudPaper>

@code {
    [CascadingParameter]
    MudDialogInstance dialog { get; set; }
    string building, roomName, supervisor;
    int seatsNumber;
    bool computersAvailable;
    MudSelect<User> mudUserField;

    void AddSingleRoom()
    {
        if (!string.IsNullOrEmpty(building) && !string.IsNullOrEmpty(roomName) && seatsNumber > 0 && mudUserField.SelectedValues.Any())
        {

            if (dbContext.Rooms.Any(r => r.Name.ToLower().Trim() == (building + "_" + roomName).ToLower().Trim()))
            {
                Snackbar.Add($"Identyczna nazwa sali istnieje w systemie", Severity.Error);

            }
            else
            {
                dbContext.Add(new Room()
                    {
                        Name = building + "_" + roomName,
                        ComputersAvailable = computersAvailable,
                        NumberOfSeats = seatsNumber, // Trzeba dodać nową obsługę tego nadzorującego,
                        SupervisorId = mudUserField.SelectedValues.FirstOrDefault().Id
                    });
                dbContext.SaveChanges();
                dialog.Close();
            }

           
        }
    }

    async Task AddManyRooms(IBrowserFile file)
    {
        using var stream = file.OpenReadStream();
        using var reader = new StreamReader(stream);
        string line;
        int lines =0;
        int linesCorrect = 0;
        while ((line = await reader.ReadLineAsync()) != null)
        {
            lines++;
            try
            {
                if(!string.IsNullOrEmpty(line))
                {
                    string[] values = line.Split(new string []{",",";"},StringSplitOptions.None);
                    if (string.IsNullOrEmpty(values[0]) || string.IsNullOrEmpty(values[1]) || string.IsNullOrEmpty(values[2]))
                        continue;

                    if (dbContext.Rooms.Any(r => r.Name.ToLower().Trim() == values[0].ToLower().Trim()))
                        continue;

                    var room = new Room()
                        {
                            Name = values[0],

                            ComputersAvailable = Convert.ToBoolean(values[1]),
                            NumberOfSeats = Convert.ToInt32(values[2]),
                            // Trzeba dodać nową obsługę tego nadzorującego
                        };
                    if (!string.IsNullOrEmpty(values[3]))
                    {
                        var usr = dbContext.Users.FirstOrDefault(u => u.Email.ToLower().Trim() == values[3].ToLower().Trim());
                        if (usr is not null)
                            room.SupervisorId = usr.Id;
                    }

                    dbContext.Add(room);
                    linesCorrect++;
                }
            }
            catch (Exception)
            {

                throw;
            }
        }
        
        Snackbar.Add($"Poprawnie zaimportowano {linesCorrect} z {lines} rekordów", Severity.Success);

        dbContext.SaveChanges();
        dialog.Close();
    }
}
